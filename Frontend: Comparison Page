// pages/index.tsx
import { useState } from "react";

interface ComparisonResult {
  product1: { name: string; safetyScore: number; ingredients: string[] };
  product2: { name: string; safetyScore: number; ingredients: string[] };
}

export default function Home() {
  const [product1, setProduct1] = useState("");
  const [product2, setProduct2] = useState("");
  const [result, setResult] = useState<ComparisonResult | null>(null);
  const [loading, setLoading] = useState(false);

  const handleCompare = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    try {
      const res = await fetch("/api/compare", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ product1, product2 }),
      });
      const data = await res.json();
      setResult(data);
    } catch (error) {
      console.error("Comparison failed:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-6">
      <h1 className="text-3xl font-bold text-gray-800 mb-6">CosmeCompare</h1>
      <form onSubmit={handleCompare} className="w-full max-w-md space-y-4">
        <input
          type="text"
          value={product1}
          onChange={(e) => setProduct1(e.target.value)}
          placeholder="Enter Product 1"
          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <input
          type="text"
          value={product2}
          onChange={(e) => setProduct2(e.target.value)}
          placeholder="Enter Product 2"
          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <button
          type="submit"
          disabled={loading}
          className="w-full bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700 disabled:bg-blue-300"
        >
          {loading ? "Comparing..." : "Compare"}
        </button>
      </form>
      {result && (
        <div className="mt-8 grid grid-cols-1 md:grid-cols-2 gap-6 w-full max-w-2xl">
          <div className="p-4 bg-white rounded-lg shadow">
            <h2 className="text-xl font-semibold">{result.product1.name}</h2>
            <p>Safety Score: {result.product1.safetyScore}</p>
            <p>Ingredients: {result.product1.ingredients.join(", ")}</p>
          </div>
          <div className="p-4 bg-white rounded-lg shadow">
            <h2 className="text-xl font-semibold">{result.product2.name}</h2>
            <p>Safety Score: {result.product2.safetyScore}</p>
            <p>Ingredients: {result.product2.ingredients.join(", ")}</p>
          </div>
        </div>
      )}
    </div>
  );
}
